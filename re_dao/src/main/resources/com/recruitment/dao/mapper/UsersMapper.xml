<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recruitment.dao.mapper.UsersMapper">

    <resultMap id="BaseResultMap" type="com.recruitment.dao.domain.Users">
            <id property="uid" column="uid" jdbcType="BIGINT"/>
            <result property="user_name" column="user_name" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="role_id" column="role_id" jdbcType="BIGINT"/>
            <result property="addtime" column="addtime" jdbcType="TIMESTAMP"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        uid,user_name,password,
        role_id,addtime,phone
    </sql>
    <insert id="insertAll">
        INSERT INTO `re`.`users` (`user_name`, `password`, `role_id`, `phone`, `addtime`) VALUES (#{userDTO.users.user_name}, #{userDTO.users.password}, 0, #{userDTO.users.phone}, #{userDTO.users.addtime})
    </insert>
    <update id="updatePassword">
        UPDATE `re`.`users` SET `password` = #{newPassword} WHERE `uid` = #{users.uid}
    </update>
    <update id="updateUserForAdmin">
        UPDATE users join job_seeker
        ON users.uid = job_seeker.uid
            SET users.user_name =#{user.userName}
        ,users.phone=#{user.userMobile},job_seeker.`name`=#{user.userRealName}
        ,job_seeker.email=#{user.userEmail},job_seeker.sex=#{user.userSex} WHERE users.uid=#{user.uid}
    </update>
    <update id="updatePasswordAndPassword">
        update users SET password = "000000" where uid=#{uid}
    </update>
    <delete id="deleteByUidAll">
        DELETE FROM `re`.`users` WHERE `uid` = #{uid}
    </delete>
    <select id="login" resultType="com.recruitment.dao.domain.Users">
        select * from users where phone = #{phone} and password = #{password}
    </select>
    <select id="selectPhone" resultType="com.recruitment.dao.domain.Users">
        select * from users where phone = #{userDTO.users.phone}
    </select>
    <select id="selectPhoneByPhone" resultType="java.lang.String">
        select phone from users where phone =#{phone}
    </select>
    <resultMap id="selectAllMap" type="com.recruitment.dao.dto.UserAdminDTO">
        <id column="uid" property="uid"/>
        <result property="uid" column="uid"/>
        <result property="userName" column="user_name"/>
        <result property="userRealName" column="name"/>
        <result property="userMobile" column="phone"/>
        <result property="editTime" column="addtime"/>
        <result property="userEmail" column="email"/>
        <result property="userPassword" column="password"/>
        <result property="userSex" column="sex"/>
    </resultMap>
    <select id="selectall" resultMap="selectAllMap">
        SELECT
            users.uid,
            users.user_name,
            users.`password`,
            users.phone,
            users.addtime,
            job_seeker.`name`,
            job_seeker.email,
            job_seeker.sex
        FROM
            users
                INNER JOIN
            job_seeker
            ON
                users.uid = job_seeker.uid
                <where>
                    <if test="userName != null and userName != ''">
                        and users.user_name LIKE concat('%',#{userName},'%')
                    </if>
                    <if test="userMobile != null and userMobile != ''">
                        and users.phone = #{userMobile}
                    </if>
                </where>
            limit #{n},#{page}
    </select>
    <select id="selectContent" resultType="java.lang.Integer">
        select count(*) from users
    </select>
</mapper>
