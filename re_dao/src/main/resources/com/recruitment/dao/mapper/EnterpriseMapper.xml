<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recruitment.dao.mapper.EnterpriseMapper">

    <resultMap id="BaseResultMap" type="com.recruitment.dao.domain.Enterprise">
            <id property="eid" column="eid" jdbcType="BIGINT"/>
            <result property="addtime" column="addtime" jdbcType="TIMESTAMP"/>
            <result property="number" column="number" jdbcType="VARCHAR"/>
            <result property="ename" column="ename" jdbcType="VARCHAR"/>
            <result property="principal" column="principal" jdbcType="VARCHAR"/>
            <result property="ephone" column="ephone" jdbcType="VARCHAR"/>
            <result property="e_email" column="e_email" jdbcType="VARCHAR"/>
            <result property="e_introduce" column="e_introduce" jdbcType="VARCHAR"/>
            <result property="media" column="media" jdbcType="VARCHAR"/>
            <result property="eva_scale" column="eva_scale" jdbcType="VARCHAR"/>
            <result property="scale" column="scale" jdbcType="VARCHAR"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        eid,addtime,`number`,
        ename,principal,ephone,
        e_email,e_introduce,
        media,evaluation,`scale`,
        address
    </sql>
    <insert id="insertAll">
        INSERT INTO `re`.`enterprise` (`addtime`, `number`, `ename`, `principal`,
                                       `ephone`, `e_email`, `e_introduce`,
                                       `scale`, `address`, `e_type`)
        VALUES (#{enterprise.addtime}, #{enterprise.number}, #{enterprise.ename}, #{enterprise.principal},
                #{enterprise.ephone},#{enterprise.e_email}, #{enterprise.e_introduce},
               #{enterprise.scale}, #{enterprise.address}, #{enterprise.e_type})
    </insert>
    <update id="updateAll">
        UPDATE `re`.`enterprise` SET `number` = #{enterprise.number}, `ename` = #{enterprise.ename}, `principal` = #{enterprise.principal}, `ephone` = #{enterprise.ephone}, `e_email` =#{enterprise.e_email}, `e_introduce` = #{enterprise.e_introduce}, `scale` = #{enterprise.scale}, `address` = #{enterprise.address}, `e_type` = #{enterprise.e_type},`addtime`=#{enterprise.addtime} WHERE `eid` = #{enterprise.eid}
    </update>
    <delete id="deleteByEid">
        DELETE FROM `re`.`enterprise` WHERE `eid` = #{eid}
    </delete>
    <select id="selectAllByRid" resultType="com.recruitment.dao.domain.Enterprise">
        SELECT
            enterprise.ename,
            enterprise.scale,
            enterprise.media,
            enterprise.e_introduce,
            enterprise.e_email,
            enterprise.ephone,
            enterprise.photo,
            enterprise.address,
            enterprise.eid
        FROM
            enterprise

              <if test="type == 'putong'.toString()">
                  LEFT JOIN
                  re_info
                  ON
                  enterprise.eid = re_info.eid

                  where re_info.rid = #{rid}

              </if>
              <if test="type == 'teshu'.toString()">
                 where enterprise.eid = #{rid}
              </if>

    </select>
    <select id="selectByEvaluation" resultType="com.recruitment.dao.domain.Enterprise">
        SELECT
            enterprise.ename,
            enterprise.address,
            enterprise.eva_scale,
            enterprise.eid
        FROM
            enterprise
        ORDER BY
            enterprise.eva_scale DESC
    </select>
    <select id="selectAllByEnameAndEtype" resultType="com.recruitment.dao.domain.Enterprise">
        SELECT
            enterprise.ename,
            enterprise.e_email,
            enterprise.address,
            enterprise.eid
        FROM
            enterprise
        <where>
            <if test="message != null and message != ''">
                AND enterprise.ename LIKE concat('%',#{message},'%')
            </if>
            <if test="type != null and type != ''">
                AND enterprise.address = #{type}
            </if>
        </where>

    </select>
    <select id="selectAll" resultType="com.recruitment.dao.domain.Enterprise">
        select * from enterprise limit #{page},#{limit}
    </select>

</mapper>
